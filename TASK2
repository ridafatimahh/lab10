import 'package:flutter/material.dart';

void main() {
  runApp(SocialMediaApp());
}

class SocialMediaApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Simple Social Media UI',
      home: FeedScreen(),
    );
  }
}

class Post {
  String title;
  String description;
  String imageUrl;

  Post({required this.title, required this.description, required this.imageUrl});
}

List<Post> dummyPosts = [];

class FeedScreen extends StatefulWidget {
  @override
  _FeedScreenState createState() => _FeedScreenState();
}

class _FeedScreenState extends State<FeedScreen> {
  void _deletePost(int index) {
    showDialog(
      context: context,
      builder: (_) => AlertDialog(
        title: Text("Delete Post"),
        content: Text("Are you sure you want to delete this post?"),
        actions: [
          TextButton(
            child: Text("No"),
            onPressed: () => Navigator.pop(context),
          ),
          TextButton(
            child: Text("Yes"),
            onPressed: () {
              setState(() {
                dummyPosts.removeAt(index);
              });
              Navigator.pop(context);
            },
          ),
        ],
      ),
    );
  }

  void _downloadImage() {
    ScaffoldMessenger.of(context).showSnackBar(
      SnackBar(content: Text("Image downloaded successfully!")),
    );
  }

  void _navigateToUpdate(Post post, int index) async {
    final updatedPost = await Navigator.push(
      context,
      MaterialPageRoute(
        builder: (_) => UploadScreen(post: post),
      ),
    );
    if (updatedPost != null) {
      setState(() {
        dummyPosts[index] = updatedPost;
      });
    }
  }

  void _navigateToUpload() async {
    final newPost = await Navigator.push(
      context,
      MaterialPageRoute(
        builder: (_) => UploadScreen(),
      ),
    );
    if (newPost != null) {
      setState(() {
        dummyPosts.add(newPost);
      });
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Feed'),
        actions: [
          IconButton(
            icon: Icon(Icons.add),
            onPressed: _navigateToUpload,
          ),
        ],
      ),
      body: ListView.builder(
        itemCount: dummyPosts.length,
        itemBuilder: (_, index) {
          final post = dummyPosts[index];
          return Card(
            margin: EdgeInsets.all(8),
            child: ListTile(
              leading: GestureDetector(
                onLongPress: _downloadImage,
                child: Image.network(
                  post.imageUrl,
                  width: 50,
                  height: 50,
                  fit: BoxFit.cover,
                ),
              ),
              title: Text(post.title),
              subtitle: Text(post.description),
              trailing: Row(
                mainAxisSize: MainAxisSize.min,
                children: [
                  IconButton(
                    icon: Icon(Icons.edit),
                    onPressed: () => _navigateToUpdate(post, index),
                  ),
                  IconButton(
                    icon: Icon(Icons.delete),
                    onPressed: () => _deletePost(index),
                  ),
                ],
              ),
            ),
          );
        },
      ),
    );
  }
}

class UploadScreen extends StatefulWidget {
  final Post? post;

  UploadScreen({this.post});

  @override
  _UploadScreenState createState() => _UploadScreenState();
}

class _UploadScreenState extends State<UploadScreen> {
  late TextEditingController _titleController;
  late TextEditingController _descriptionController;
  String placeholderImage =
      'https://via.placeholder.com/150'; // Static placeholder

  @override
  void initState() {
    _titleController =
        TextEditingController(text: widget.post?.title ?? '');
    _descriptionController =
        TextEditingController(text: widget.post?.description ?? '');
    super.initState();
  }

  void _submitPost() {
    final post = Post(
      title: _titleController.text,
      description: _descriptionController.text,
      imageUrl: placeholderImage,
    );
    Navigator.pop(context, post);
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(widget.post == null ? 'Upload Post' : 'Update Post'),
      ),
      body: Padding(
        padding: EdgeInsets.all(16),
        child: Column(
          children: [
            TextField(
              controller: _titleController,
              decoration: InputDecoration(labelText: 'Post Title'),
            ),
            TextField(
              controller: _descriptionController,
              decoration: InputDecoration(labelText: 'Post Description'),
            ),
            SizedBox(height: 16),
            Image.network(placeholderImage, height: 100),
            SizedBox(height: 16),
            ElevatedButton(
              onPressed: _submitPost,
              child: Text(widget.post == null ? 'Upload' : 'Update'),
            ),
          ],
        ),
      ),
    );
  }
}
